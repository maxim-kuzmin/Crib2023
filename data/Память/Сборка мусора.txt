# Сборка мусора (Garbage collection)

## Как

- Сборщик мусора запускается либо автоматически при нехватке памяти приложению или превышении допустимого её порога, либо вручную вызовом метода GC.Collect().

- Для каждого управляемого процесса существует управляемая куча в отличие от собственной кучи операционной системы.

- Очистка памяти: из управляемой кучи удаляются объекты, на которые нет прямых или косвенных (через другие объекты) ссылок в других, отличных от управляемой кучи, местах в памяти приложения.

- Уплотнение (дефрагментация) памяти: после удаления неиспользуемых объектов оставшиеся объекты смещаются так, чтобы быть расположенными вплотную друг к другу.

- Во время сборки мусора приложение не может продолжать свою работу.

- Области памяти в куче делятся на три части, называемые поколениями: нулевое (0), первое (1) и второе (2).

- В нулевое поколение помещаются все новые объекты.

- В первое поколение помещаются объекты, пережившие один запуск сборщика мусора.

- Во второе поколение помещаются объекты, пережившие два запуска сборщика мусора.

- При размещении в памяти объектов с финализатором ссылки на них размещаются в специальной таблице под названием очередь завершения.

- Предназначенный для удаления объект, на который есть ссылка в очереди завершения, не удаляется стразу, а сначала помещается в другую таблицу и окончательно уничтожается лишь при следующем проходе сборщика мусора.

- Для больших объектов память выделяется в отдельной куче, которая не уплотняется.

## Зачем

- Уплотнение памяти ускоряет размещение новых объектов в управляемой куче.


## Почему

- Уплотнение памяти избавляет от необходимости поиска свободного места достаточного размера под новые объекты и позволяет сокращать общий размер занимаемой приложением памяти.